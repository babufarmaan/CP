#include <bits/stdc++.h>
//  find string present in the string or not 
//  find how many times string present
// count the number of different prefix_function
// Counting the number of occurrences of each prefix
// Compressing a string
using namespace std;
vector<int>prefix_function(string s){
  int n = (int)s.length();
  vector<int>pi(n,0);
  pi[0]=0;
  for(int i=1;i<n;i++){
    int j = pi[i-1];
    while(j>0 and s[i]!=s[j]) j = pi[j-1];
    if(s[i]==s[j])j++;
    pi[i]= j;
  }
  return pi;
}
int32_t main() 
{
    string s,t; cin>>s>>t;
    vector<int>lps = prefix_function(t);
    // for(auto i: lps)cout<<i<<" ";
    int pos = -1;
    int i(0),j(0);
    //  i is for string s AND j is for string t
    while(j<t.size()){
      if(s[i]==t[j]){
        j++; i++;
      }
      else{
        if(j!=0){
          j = lps[j-1];
        }else{
          i++;
        }
      }
      if(j==t.size()){
        pos = i-t.size();
      }
    }
    cout<<pos;
    
}